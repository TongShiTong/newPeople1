{"remainingRequest":"C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\src\\views\\Home.vue","mtime":1600607602857},{"path":"C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86182\\Desktop\\新建文件夹 (2)\\新建文件夹\\activity-newPeople\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}